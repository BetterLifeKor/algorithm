// 정렬 기준 정하기

#define STD_1 2
#define STD_2 0
#define STD_3 1

bool compare1(const vector<int> &a, const vector<int> &b) {
	return a[STD_1] < b[STD_1];
}
bool compare2(const vector<int> &a, const vector<int> &b) {
	return a[STD_2] < b[STD_2];
}
bool compare3(const vector<int> &a, const vector<int> &b) {
	return a[STD_3] < b[STD_3];
}

vector<vector<int>> myList(MAX_List, vector<int>(4, 0));

// 정렬 기준 순서 정하기

int index;

sort(myList.begin(), myList.begin() + nList + 1, compare1);	
		
index = 0;
FOR(i, nList) {
	if (myList[i][STD_1] != myList[i + 1][STD_1]) {
		sort(myList.begin() + index, myList.begin() + i +1, compare2);
		index = i+1;
	}
	if( i == nList - 1) sort(myList.begin() + index, myList.begin() + nList+1, compare2);
}

index = 0;
FOR(i, nList) {
	if (myList[i][STD_2] != myList[i + 1][STD_2]) {
		sort(myList.begin() + index, myList.begin() + i + 1, compare3);
		index = i + 1;
	}
	if (i == nList - 1) sort(myList.begin() + index, myList.begin() + nList+1, compare3);
}